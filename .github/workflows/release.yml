on:
  push:
    tags:
      - 'v.*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3.8.10-rc.6-management
        options: --hostname github
        env:
          RABBITMQ_NODENAME: rabbit
          RABBITMQ_DEFAULT_USER: monitoring
          RABBITMQ_DEFAULT_PASS: secret
        ports:
          - 15672:15672
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Build
        run: go build -o check-rabbitmq -v ./cmd/CheckRabbitMQ.go
      - name: Test
        run: go test -v ./test
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./check-rabbitmq
          asset_name: check-rabbitmq-linux
